// <auto-generated />
using CovidReader.Covid;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CovidReader.Covid.Migrations
{
    [DbContext(typeof(SqliteCovidDbContext))]
    [Migration("20210905045346_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.17");

            modelBuilder.Entity("CovidReader.Models.Covid.CovidLineItem", b =>
                {
                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.HasKey("Date");

                    b.ToTable("CovidLineItems");
                });

            modelBuilder.Entity("CovidReader.Models.Covid.Death", b =>
                {
                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.HasKey("Date");

                    b.ToTable("Deathes");
                });

            modelBuilder.Entity("CovidReader.Models.Covid.Hospitalization", b =>
                {
                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.HasKey("Date");

                    b.ToTable("Hospitalizations");
                });

            modelBuilder.Entity("CovidReader.Models.Covid.Positive", b =>
                {
                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.HasKey("Date");

                    b.ToTable("Positives");
                });

            modelBuilder.Entity("CovidReader.Models.Covid.Recovery", b =>
                {
                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.HasKey("Date");

                    b.ToTable("Recoveries");
                });

            modelBuilder.Entity("CovidReader.Models.Covid.Severe", b =>
                {
                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.HasKey("Date");

                    b.ToTable("Severes");
                });

            modelBuilder.Entity("CovidReader.Models.Covid.Test", b =>
                {
                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.HasKey("Date");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("CovidReader.Models.Covid.TestDetail", b =>
                {
                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("CareCenterNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("CivilCenterNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("CollegeNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("MedicalNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuarantineNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("Date");

                    b.ToTable("TestDetails");
                });

            modelBuilder.Entity("CovidReader.Models.Covid.Death", b =>
                {
                    b.HasOne("CovidReader.Models.Covid.CovidLineItem", null)
                        .WithOne("Death")
                        .HasForeignKey("CovidReader.Models.Covid.Death", "Date")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CovidReader.Models.Covid.Hospitalization", b =>
                {
                    b.HasOne("CovidReader.Models.Covid.CovidLineItem", null)
                        .WithOne("Hospitalization")
                        .HasForeignKey("CovidReader.Models.Covid.Hospitalization", "Date")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
